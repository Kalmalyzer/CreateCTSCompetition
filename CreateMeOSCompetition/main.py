
import datetime
import xml.dom.minidom
import xml.etree.ElementTree as ElementTree

import config

timestamp = datetime.datetime.now()

def prettify(xmltree):
	"""Return a pretty-printed XML string for the Element.
	"""
	rough_string = ElementTree.tostring(xmltree, 'utf-8')
	reparsed = xml.dom.minidom.parseString(rough_string)
	pretty_xml = reparsed.toprettyxml(indent='  ', encoding='ISO-8859-1')
	pretty_xml_lines = pretty_xml.splitlines()
	pretty_xml_lines2 = filter(str.strip, pretty_xml_lines)
	pretty_xml2 = "\n".join(pretty_xml_lines2)
	return pretty_xml2

def generate_new_name_id():
	return 'meos_' + timestamp.strftime('%Y%m%d_%H%M%S_%f')
	
def get_start_time_in_seconds():
	start_time = "18:00:00"
	segments = start_time.split(":")
	return str(int(segments[0]) * 60 * 60 + int(segments[1]) * 60 + int(segments[2]))

def get_current_updated_timestamp():
	return timestamp.strftime('%Y%m%d%H%M%S')

def create_oData():

	oData = ElementTree.parse('templates/oData.xml')
	oData.find('CardFee').text = config.config['rental price for SI-pin']
	oData.find('EliteFee').text = "0"
	oData.find('EntryFee').text = "0"
	oData.find('YouthFee').text = "0"
	oData.find('YouthAge').text = "0"
	oData.find('LateEntryFactor').text = config.config['price increase for late registration, in percent'] + " %"
	return oData

def create_competition():

	meosdata = ElementTree.parse('templates/meosdata.xml')
	meosdata.find('Name').text = "Autogenerated on " + get_current_updated_timestamp()
	meosdata.find('NameId').text = generate_new_name_id()
	meosdata.find('ZeroTime').text = get_start_time_in_seconds()
	meosdata.find('Updated').text = get_current_updated_timestamp()

	meosdata.getroot().append(create_oData().getroot())
	
	print prettify(meosdata.getroot())
	

if __name__ == '__main__':

	create_competition()